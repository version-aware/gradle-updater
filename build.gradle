buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'cz.augi:gradle-wartremover:0.9.3'
        classpath 'cz.alenkacz:gradle-scalafmt:1.6.0'
        classpath 'cz.augi:gradle-docker-java:1.3.0'
        classpath 'com.avast.gradle:gradle-docker-compose-plugin:0.7.1'
    }
}

apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'scalafmt'
apply plugin: 'wartremover'
apply plugin: 'docker-java'
apply plugin: 'docker-compose'

group 'com.versionaware'
version = version == 'unspecified' ? 'DEVELOPER-SNAPSHOT' : version
mainClassName = 'com.versionaware.gradleupdater.Program'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.scala-lang:scala-library:2.12.4'
    compile 'com.typesafe.scala-logging:scala-logging_2.12:3.8.0'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.github.scopt:scopt_2.12:3.7.0'

    compile 'com.softwaremill.sttp:core_2.12:1.1.4'
    compile 'io.circe:circe-parser_2.12:0.9.0'
    compile 'io.circe:circe-generic_2.12:0.9.0'

    compile 'org.gitlab4j:gitlab4j-api:4.8.5'

    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.12:3.0.4'
}

sourceSets {
    main {
        resources {
            srcDir projectDir include 'gradle/wrapper/gradle-wrapper.jar', 'gradle/wrapper/gradle-wrapper.properties', 'gradlew', 'gradlew.bat'
        }
    }
}

dockerJava {
    image = "versionaware/gradle-gitlab-updater:$version"
    alternativeImages = ['versionaware/gradle-gitlab-updater:latest']
    username = System.getenv('DOCKER_USERNAME')
    password = System.getenv('DOCKER_PASSWORD')
}

dockerCompose.isRequiredBy(test)

wartremover {
    warningWarts.removeAll(['DefaultArguments', 'NonUnitStatements', 'Null', 'AsInstanceOf'])
}

test {
    testLogging {
        events 'failed'
        exceptionFormat 'full'
    }
}
